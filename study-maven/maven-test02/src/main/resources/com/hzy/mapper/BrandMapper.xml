<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    namespace:名称空间
-->

<mapper namespace="com.hzy.mapper.BrandMapper">
    <!--<select id="selectAll" resultType="com.hzy.pojo.User">-->
    <!--取了别名后就不需要加包名，也不分大小写-->

    <!--    <select id="selectAll" resultType="brand">-->
    <!--    实体类字段名和数据库对不上  brandName..brand_name -->
    <!--        select *-->
    <!--        from tb_brand;-->
    <!--    </select>-->
    <!--<select id="selectAll" resultType="brand">
        select id,brand_name as brandName,company_name as companyName,ordered,description,status
        from tb_brand;
    </select>-->


    <resultMap id="brandResultMap" type="brand">
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>
    <!--<insert id="addAll">
    这么写 不会将id绑定到对象
        insert into tb_brand (brand_name, company_name, ordered, description, status)
        VALUES (#{brandName},#{companyName},#{ordered},#{description},#{status})
    </insert>-->
    <!--主键返回-->
    <insert id="addAll" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand (brand_name, company_name, ordered, description, status)
        VALUES (#{brandName}, #{companyName}, #{ordered}, #{description}, #{status})
    </insert>


    <!--<update id="updateAll">
        update tb_brand set brand_name = #{brandName} ,
                            company_name = #{companyName},
                            ordered = #{ordered},
                            description = #{description}
                        where id = #{id};
    </update>-->
    <!--<update id="updateAll">
    这种写法存在问题
        update tb_brand set
        <if test="brandName != null and brandName!= ''">
            brand_name = #{brandName} ,
        </if>
        <if test="companyName != null and companyName!= ''">
            company_name = #{companyName},
        </if>
        <if test="companyName != null and companyName!= ''">
            company_name = #{companyName},
        </if>
        <if test="ordered != null ">
            ordered = #{ordered},
        </if>
        <if test="description != null and description!= ''">
            description = #{description},
        </if>
        <if test="status != null" >
            status = #{status}
        </if>

        where id = #{id};
    </update>-->
    <update id="updateAll">
        update tb_brand
        <set>
            <if test="brandName != null and brandName!= ''">
                brand_name = #{brandName} ,
            </if>
            <if test="companyName != null and companyName!= ''">
                company_name = #{companyName},
            </if>
            <if test="companyName != null and companyName!= ''">
                company_name = #{companyName},
            </if>
            <if test="ordered != null ">
                ordered = #{ordered},
            </if>
            <if test="description != null and description!= ''">
                description = #{description},
            </if>
            <if test="status != null">
                status = #{status}
            </if>


        </set>
        where id = #{id};
    </update>

    <!--
    mybatis 会将数组参数封装为一个Map集合
        默认：array = 数组

        collection="array" 如果 delByIds 带了@Param("ids") 注解
        可以写成
         collection="ids"

         separator 分隔符
    -->

    <delete id="delByIds">
        delete from tb_brand where id
        in
            <foreach collection="ids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>

    </delete>


    <!--简单语句可以用注解开发
    <select id="selectAll" resultMap="brandResultMap">
        select *
        from tb_brand;
    </select>-->

    <!--<select id="selectByIdBrand" resultMap="brandResultMap">
        select *
        from tb_brand
        where id = #{id};
    </select>-->
    <!--<select id="selectByStatusAndByBrandNameAndByCompanyName" resultMap="brandResultMap" >
        select *
        from tb_brand where status = #{status} and brand_name like #{brandName} and company_name like #{companyName};
    </select>-->
    <!--动态sql-->
    <!--/*brandName != null 要用属性名不能用数据库字段名 */-->
    <select id="selectByStatusAndByBrandNameAndByCompanyName" resultMap="brandResultMap">
        select *
        from tb_brand /*where*/
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="brandName != null and brandName!= ''">
                and brand_name like #{brandName}
            </if>
            <if test="companyName != null and companyName!= ''">
                and company_name like #{companyName}
            </if>
        </where>
        ;
    </select>
    <select id="selectByOne" resultMap="brandResultMap">
        select *
        from tb_brand where
        <choose>
            <when test="status != null">
                status=#{status}
            </when>
            <when test="companyName != null and companyName != ''">
                company_name like #{companyName}
            </when>
            <when test="brandName != null and brandName != ''">
                brand_name like #{brandName}
            </when>
            <otherwise>/*类似default*/
                1=1
            </otherwise>
        </choose>
    </select>


</mapper>